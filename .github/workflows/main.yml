name: Node.js CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Create package.json if missing
      run: |
        if [ ! -f package.json ]; then
          echo '{
            "name": "envato-downloader",
            "version": "1.0.0",
            "scripts": {
              "start": "node server/index.js",
              "test": "echo \"No tests specified\""
            },
            "dependencies": {
              "express": "^4.18.2",
              "puppeteer": "^21.6.0",
              "cors": "^2.8.5"
            }
          }' > package.json
        fi

    - name: Install dependencies (will generate package-lock.json)
      run: npm install

    - name: Install Puppeteer system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libgbm1 \
          libnss3 \
          libatk1.0-0 \
          libatk-bridge2.0-0 \
          libxkbcommon0 \
          libxcomposite1 \
          libxdamage1 \
          libxrandr2 \
          libasound2 \
          xvfb

    - name: Verify Puppeteer installation
      run: |
        node -e "
          async function testPuppeteer() {
            try {
              console.log('Testing Puppeteer...');
              const puppeteer = require('puppeteer');
              const browser = await puppeteer.launch({
                headless: 'new',
                args: ['--no-sandbox', '--disable-setuid-sandbox']
              });
              const page = await browser.newPage();
              await page.goto('https://example.com', {waitUntil: 'domcontentloaded'});
              console.log('Puppeteer test successful!');
              await browser.close();
            } catch (error) {
              console.error('Puppeteer test failed:', error);
              process.exit(1);
            }
          }
          testPuppeteer();
        "

    - name: Run build
      run: npm run build --if-present

    - name: Run tests
      run: npm test
